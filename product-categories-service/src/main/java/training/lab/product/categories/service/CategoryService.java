package training.lab.product.categories.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import training.lab.product.categories.exception.CrudException;
import training.lab.product.categories.exception.ResourceNotFoundException;
import training.lab.product.categories.model.Category;
import training.lab.product.categories.repository.CategoryRepository;

import javax.transaction.Transactional;
import java.util.List;

@Service
public class CategoryService {

    @Autowired
    private CategoryRepository categoryRepository;

    public List<Category> getCategories() {
        return categoryRepository.findAll();
    }

    public Category getCategory(Long categoryId) {
        if (null == categoryId || categoryId <= 0) {
            throw new CrudException("Category Id Is Invalid");
        }
        Category category = null;
        try {
            category = categoryRepository.findById(categoryId).get();
        } catch (Exception ex) {
            throw new ResourceNotFoundException("Category Record Id: " + categoryId + " Not Found In The Database");
        }
        return category;
    }

    @Transactional
    public Category saveCategory(Category category) {
        if (null == category) {
            throw new CrudException("Request Parameters Not Found In The Request Body");
        }
        if (!(null == category.getCategoryId())) {
            throw new CrudException("Remove the Category Id From The Request Body. It Will Be Auto Generated By The System");
        }
        Category newCategory = null;
        try {
            newCategory = categoryRepository.save(category);
        } catch(Exception ex) {
            throw new CrudException("Error While Inserting The Record In To The Database");
        }
        return newCategory;
    }

    @Transactional
    public Category updateCategory(Category category) {
        if (null == category) {
            throw new CrudException("Request Parameters Not Found In The Request Body");
        }
        if (null == category.getCategoryId()) {
            throw new CrudException("Category Id Is Missing In The Request Body");
        }
        Category updatedCategory = null;
        try {
            updatedCategory = categoryRepository.save(category);
        } catch(Exception ex) {
            throw new CrudException("Error While Updating The Record In To The Database");
        }
        return updatedCategory;
    }

    @Transactional
    public void deleteCategory(Long categoryId) {
        if (null == categoryId || categoryId <= 0) {
            throw new CrudException("Category Id Is Invalid");
        }
        try {
            categoryRepository.deleteById(categoryId);
        } catch(Exception ex) {
            throw new ResourceNotFoundException("Category Record Id: " + categoryId + " Not Found In The Database");
        }
    }
}
